steps:
  # Frontend

  - id: 'frontend-build'
    name: 'us.gcr.io/${PROJECT_ID}/ocpx-nodejs:${_NODEJS_VERSION}'
    waitFor: ['-']
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        set -e

        app_name="ocpx-ncr-retail-demo"
        publish_path="publish/${app_name}"
        mkdir app

        rm -rf bin obj dist
        npm install
        npm run build

        mkdir -p "$publish_path"
        mv "app/" "${publish_path}/wwwroot"

        cp "build/cloudbuild/app-web-static/docker-startup.sh" "$publish_path"
        cp "build/cloudbuild/app-web-static/nginx.conf" "$publish_path"
        cp "build/cloudbuild/app-web-static/Dockerfile" "$publish_path"

        echo "--ls--"
        ls "$publish_path"

        echo "-----------------------"
        echo "frontend-build complete"
        echo "-----------------------"
  - id: 'frontend-docker'
    name: 'gcr.io/cloud-builders/docker'
    waitFor: ['frontend-build']
    args:
      [
        'build',
        '--build-arg',
        'NGINX_VERSION=${_NGINX_VERSION}',
        '--build-arg',
        'NGINX_VARIANT=alpine',
        '--tag',
        'us.gcr.io/${PROJECT_ID}/ocpx-ncr-retail-demo:${TAG_NAME}',
        '--label',
        'ocpx-artifact=${TAG_NAME}',
        'publish/ocpx-ncr-retail-demo',
      ]

  # Helm Charts

  - id: 'publish-helm'
    name: 'us.gcr.io/${PROJECT_ID}/ocpx-helm:${_HELM_VERSION}-gcs${_HELM_GCS_VERSION}'
    waitFor:
      - frontend-docker
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "ls"
        ls -la
        cd build/helm/charts

        helm gcs init "gs://${_HELM_STORAGE_BUCKET}"
        helm repo add gs-repository "gs://${_HELM_STORAGE_BUCKET}"

        for app_path in */; do
          app="$( echo "$(basename "$app_path")" | awk '{print tolower($0)}' )"

          echo "Publish Helm charts for ${app}"

          helm lint "$app"
          helm package "$app" --version "$TAG_NAME"
          helm gcs push "${app}-${TAG_NAME}.tgz" gs-repository --retry --force
        done

images:
  - 'us.gcr.io/${PROJECT_ID}/ocpx-ncr-retail-demo:${TAG_NAME}'

substitutions:
  _HELM_GCS_VERSION: '0.2.0'
  _HELM_STORAGE_BUCKET: ''
  _HELM_VERSION: '2.11.0'
  _NODEJS_VERSION: '12'
  _NGINX_VERSION: '1.15'
